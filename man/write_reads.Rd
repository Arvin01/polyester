% Generated by roxygen2 (4.0.1): do not edit by hand
\name{write_reads}
\alias{write_reads}
\title{write sequencing reads to disk}
\usage{
write_reads(reads, fname, readlen, paired = TRUE)
}
\arguments{
\item{reads}{DNAStringSet representing sequencing reads}

\item{fname}{file path to where sequencing reads should be written. Should be not contain
".fasta" (this is appended automatically).}

\item{readlen}{maximum length of the reads in \code{reads}.}

\item{paired}{If \code{TRUE}, reads are assumed to be in pairs: i.e., read 1 and read 2 in
\code{reads} are the left and right mate (respectively) of a read pair; same with read 3 and
read 4, etc. The odd-numbered reads are written to \code{fname_1.fasta} and the even-numbered
reads are written to \code{fname_2.fasta}. If \code{FALSE}, reads are assumed to be single-end
and just one file, \code{fname.fasta}, is written.}
}
\description{
given a DNAStringSet representing simulated sequencing reads, write FASTA files to disk
representing the simulated reads.
}
\details{
The \code{\link{get_reads}} function returns a DNAStringSet object representing
sequencing reads that can be directly passed to \code{write_reads}. If output other than that
from \code{get_reads} is used and \code{paired} is \code{TRUE}, make sure \code{reads} is
ordered properly (i.e., that mate pairs appear together and that the left mate appears first).
}
\examples{
\dontrun{
  require(Biostrings)
  data(srPhiX174) # pretend srPhiX174 represents a DNAStringSet of *reads*
  readlen = unique(width(srPhiX174)) #35
  write_reads(srPhiX174, fname='./srPhiX174', readlen=readlen, paired=FALSE)
}
}
\seealso{
\code{\link{get_reads}}
}

